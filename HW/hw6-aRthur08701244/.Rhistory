knitr::opts_chunk$set(echo = TRUE,comment = '#>',error=TRUE, results = 'hold', out.width='65%', fig.align = 'center', message = FALSE)
# Write your code here
read.csv(Titanic,sep = ;)
# 請勿更動下方程式碼
head(titanic)
# Should print out:
#> # A tibble: 6 x 12
#>   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare
#>         <dbl> <chr>     <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>  <dbl>
#> 1         343 No            2 Coll… male     28     0     0 248740 13
#> 2          76 No            3 Moen… male     25     0     0 348123  7.65
#> 3         641 No            3 Jens… male     20     0     0 350050  7.85
#> 4         568 No            3 Pals… fema…    29     0     4 349909 21.1
#> 5         672 No            1 Davi… male     31     1     0 F.C. … 52
#> 6         105 No            3 Gust… male     37     2     0 31012…  7.92
#> # … with 2 more variables: Cabin <chr>, Embarked <chr>
# Write your code here
titanic <- read.csv(Titanic,sep = ;)
# 請勿更動下方程式碼
head(titanic)
# Should print out:
#> # A tibble: 6 x 12
#>   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare
#>         <dbl> <chr>     <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>  <dbl>
#> 1         343 No            2 Coll… male     28     0     0 248740 13
#> 2          76 No            3 Moen… male     25     0     0 348123  7.65
#> 3         641 No            3 Jens… male     20     0     0 350050  7.85
#> 4         568 No            3 Pals… fema…    29     0     4 349909 21.1
#> 5         672 No            1 Davi… male     31     1     0 F.C. … 52
#> 6         105 No            3 Gust… male     37     2     0 31012…  7.92
#> # … with 2 more variables: Cabin <chr>, Embarked <chr>
# Write your code here
titanic <- read.csv(Titanic,sep = ;)
# 請勿更動下方程式碼
head(titanic)
# Should print out:
#> # A tibble: 6 x 12
#>   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare
#>         <dbl> <chr>     <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>  <dbl>
#> 1         343 No            2 Coll… male     28     0     0 248740 13
#> 2          76 No            3 Moen… male     25     0     0 348123  7.65
#> 3         641 No            3 Jens… male     20     0     0 350050  7.85
#> 4         568 No            3 Pals… fema…    29     0     4 349909 21.1
#> 5         672 No            1 Davi… male     31     1     0 F.C. … 52
#> 6         105 No            3 Gust… male     37     2     0 31012…  7.92
#> # … with 2 more variables: Cabin <chr>, Embarked <chr>
# Write your code here
titanic <- read.csv2(Titanic)
# 請勿更動下方程式碼
head(titanic)
# Should print out:
#> # A tibble: 6 x 12
#>   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare
#>         <dbl> <chr>     <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>  <dbl>
#> 1         343 No            2 Coll… male     28     0     0 248740 13
#> 2          76 No            3 Moen… male     25     0     0 348123  7.65
#> 3         641 No            3 Jens… male     20     0     0 350050  7.85
#> 4         568 No            3 Pals… fema…    29     0     4 349909 21.1
#> 5         672 No            1 Davi… male     31     1     0 F.C. … 52
#> 6         105 No            3 Gust… male     37     2     0 31012…  7.92
#> # … with 2 more variables: Cabin <chr>, Embarked <chr>
# Write your code here
library(readr)
titanic <- read_csv("titanic-passengers.csv", delim = ";")
# 請勿更動下方程式碼
head(titanic)
# Should print out:
#> # A tibble: 6 x 12
#>   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare
#>         <dbl> <chr>     <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>  <dbl>
#> 1         343 No            2 Coll… male     28     0     0 248740 13
#> 2          76 No            3 Moen… male     25     0     0 348123  7.65
#> 3         641 No            3 Jens… male     20     0     0 350050  7.85
#> 4         568 No            3 Pals… fema…    29     0     4 349909 21.1
#> 5         672 No            1 Davi… male     31     1     0 F.C. … 52
#> 6         105 No            3 Gust… male     37     2     0 31012…  7.92
#> # … with 2 more variables: Cabin <chr>, Embarked <chr>
# Write your code here
titanic <- read.csv("titanic-passengers.csv", delim = ";")
# 請勿更動下方程式碼
head(titanic)
# Should print out:
#> # A tibble: 6 x 12
#>   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare
#>         <dbl> <chr>     <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>  <dbl>
#> 1         343 No            2 Coll… male     28     0     0 248740 13
#> 2          76 No            3 Moen… male     25     0     0 348123  7.65
#> 3         641 No            3 Jens… male     20     0     0 350050  7.85
#> 4         568 No            3 Pals… fema…    29     0     4 349909 21.1
#> 5         672 No            1 Davi… male     31     1     0 F.C. … 52
#> 6         105 No            3 Gust… male     37     2     0 31012…  7.92
#> # … with 2 more variables: Cabin <chr>, Embarked <chr>
# Write your code here
titanic <- read.csv("titanic-passengers.csv", sep = ";")
# 請勿更動下方程式碼
head(titanic)
# Should print out:
#> # A tibble: 6 x 12
#>   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare
#>         <dbl> <chr>     <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>  <dbl>
#> 1         343 No            2 Coll… male     28     0     0 248740 13
#> 2          76 No            3 Moen… male     25     0     0 348123  7.65
#> 3         641 No            3 Jens… male     20     0     0 350050  7.85
#> 4         568 No            3 Pals… fema…    29     0     4 349909 21.1
#> 5         672 No            1 Davi… male     31     1     0 F.C. … 52
#> 6         105 No            3 Gust… male     37     2     0 31012…  7.92
#> # … with 2 more variables: Cabin <chr>, Embarked <chr>
# Write your code here
titanic <- read.csv("titanic-passengers.csv", sep = ";")
# 請勿更動下方程式碼
head(titanic)
# Should print out:
#> # A tibble: 6 x 12
#>   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare
#>         <dbl> <chr>     <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>  <dbl>
#> 1         343 No            2 Coll… male     28     0     0 248740 13
#> 2          76 No            3 Moen… male     25     0     0 348123  7.65
#> 3         641 No            3 Jens… male     20     0     0 350050  7.85
#> 4         568 No            3 Pals… fema…    29     0     4 349909 21.1
#> 5         672 No            1 Davi… male     31     1     0 F.C. … 52
#> 6         105 No            3 Gust… male     37     2     0 31012…  7.92
#> # … with 2 more variables: Cabin <chr>, Embarked <chr>
knitr::opts_chunk$set(echo = TRUE,comment = '#>',error=TRUE, results = 'hold', out.width='65%', fig.align = 'center', message = FALSE)
classify <- function(ages) {
# Initialize empty vector of length same as `ages`
age_group <- vector("character", length = length(ages))
# Use for loop to write 'vectorized' function
for (i in seq_along(ages)) {
######### Modify the code below #############
if ( is.null(NA)) {
age_group[i] <- NA
} else if (ages[i] < 15) {
age_group[i] <- "young"
} else if (ages[i] < 60) {
age_group[i] <- "middle"
} else {
age_group[i] <- "old"
}
######### Modify the code above #############
}
return(age_group)
}
# 請勿更動此下方程式碼
classify(NA)
classify(c(14, 15, 16, NA, 59, 60))
# Should print out:
#> [1] NA
#> [1] "young"  "middle" "middle" NA       "middle" "old"
classify <- function(ages) {
# Initialize empty vector of length same as `ages`
age_group <- vector("character", length = length(ages))
# Use for loop to write 'vectorized' function
for (i in seq_along(ages)) {
######### Modify the code below #############
if ( is.ages[i](NA)) {
age_group[i] <- NA
} else if (ages[i] < 15) {
age_group[i] <- "young"
} else if (ages[i] < 60) {
age_group[i] <- "middle"
} else {
age_group[i] <- "old"
}
######### Modify the code above #############
}
return(age_group)
}
# 請勿更動此下方程式碼
classify(NA)
classify(c(14, 15, 16, NA, 59, 60))
# Should print out:
#> [1] NA
#> [1] "young"  "middle" "middle" NA       "middle" "old"
classify <- function(ages) {
# Initialize empty vector of length same as `ages`
age_group <- vector("character", length = length(ages))
# Use for loop to write 'vectorized' function
for (i in seq_along(ages)) {
######### Modify the code below #############
if ( is.na(ages[i])) {
age_group[i] <- NA
} else if (ages[i] < 15) {
age_group[i] <- "young"
} else if (ages[i] < 60) {
age_group[i] <- "middle"
} else {
age_group[i] <- "old"
}
######### Modify the code above #############
}
return(age_group)
}
# 請勿更動此下方程式碼
classify(NA)
classify(c(14, 15, 16, NA, 59, 60))
# Should print out:
#> [1] NA
#> [1] "young"  "middle" "middle" NA       "middle" "old"
classify <- function(ages) {
# Initialize empty vector of length same as `ages`
age_group <- vector("character", length = length(ages))
# Use for loop to write 'vectorized' function
for (i in seq_along(ages)) {
######### Modify the code below #############
if ( is.na(ages[i])) {
age_group[i] <- NA
} else if (ages[i] < 15) {
age_group[i] <- "young"
} else if (ages[i] < 60) {
age_group[i] <- "middle"
} else {
age_group[i] <- "old"
}
######### Modify the code above #############
}
return(age_group)
}
# 請勿更動此下方程式碼
classify(NA)
classify(c(14, 15, 16, NA, 59, 60))
# Should print out:
#> [1] NA
#> [1] "young"  "middle" "middle" NA       "middle" "old"
# Write your code here
titanic %>%
group_by(Pclass,age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
group_by(Pclass,age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
classify <- function(ages) {
# Initialize empty vector of length same as `ages`
age_group <- vector("character", length = length(ages))
# Use for loop to write 'vectorized' function
for (i in seq_along(ages)) {
######### Modify the code below #############
if ( is.na(ages[i])) {
age_group[i] <- NA
} else if (ages[i] < 15) {
age_group[i] <- "young"
} else if (ages[i] < 60) {
age_group[i] <- "middle"
} else {
age_group[i] <- "old"
}
######### Modify the code above #############
}
return(age_group)
}
# 請勿更動此下方程式碼
classify(NA)
classify(c(14, 15, 16, NA, 59, 60))
# Should print out:
#> [1] NA
#> [1] "young"  "middle" "middle" NA       "middle" "old"
# Write your code here
library(dplyr)
titanic %>%
group_by(Pclass,age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
group_by(Pclass) %>%
summarise(age_group,count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
group_by(Pclass) %>%
summarise(age_group = classify(ages),count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
group_by(Pclass) %>%
summarise(age_group = classify(titanic["ages"]),count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
group_by(Pclass) %>%
summarise(age_group = classify(titanic[ages]),count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
