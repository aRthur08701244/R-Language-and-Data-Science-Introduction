# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = if(titanic$Age<15){
age_group = "young"}
else if(titanic$Age<60){
age_group = "middle"}
else{
age_group = "old"
}
) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = classify(titanic$Age)
) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = classify(titanic$Age)
) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
titanic$Age
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = for (i in seq_along(titanic$Age))classify(titanic$Age[i])
) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = for (i in seq_along(titanic$Age))classify(titanic$Age[i])
) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = vector("character", length = length(titanic$Age))
for (i in seq_along(titanic$Age)) {
if ( is.na(titanic$Age[i])) {
age_group[i] <- NA
} else if (titanic$Age[i] < 15) {
age_group[i] <- "young"
} else if (titanic$Age[i] < 60) {
age_group[i] <- "middle"
} else {
age_group[i] <- "old"
}
}) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = vector("character", length = length(titanic$Age))
for (i in seq_along(titanic$Age)) {
if ( is.na(titanic$Age[i])) {
age_group[i] <- NA
} else if (titanic$Age[i] < 15) {
age_group[i] <- "young"
} else if (titanic$Age[i] < 60) {
age_group[i] <- "middle"
} else {
age_group[i] <- "old"
}
}) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
length(titanic$Age)
# Write your code here
library(dplyr)
for (i in seq_along(titanic$Age)) {
titanic %>%
mutate(age_group = classify(titanic$Age)) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
}
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
titanic$Age
classify <- function(ages) {
# Initialize empty vector of length same as `ages`
age_group <- vector("character", length = length(ages))
# Use for loop to write 'vectorized' function
for (i in seq_along(ages)) {
######### Modify the code below #############
if ( is.na(ages[i])) {
age_group[i] <- NA
} else if (ages[i] < 15) {
age_group[i] <- "young"
} else if (ages[i] < 60) {
age_group[i] <- "middle"
} else {
age_group[i] <- "old"
}
######### Modify the code above #############
}
return(age_group)
}
# 請勿更動此下方程式碼
classify(NA)
classify(c(14, 15, 16, NA, 59, 60))
# Should print out:
#> [1] NA
#> [1] "young"  "middle" "middle" NA       "middle" "old"
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = classify(titanic$Age)) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = classify(titanic$Age)) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic %>%
mutate(age_group = classify(titanic$Age)) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percenr_died = sum(Survived == "Yes")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
# Write your code here
library(dplyr)
titanic10 <- filter(titanic,!is.na(titanic$Age))
titanic10%>%
group_by(Sex, Pclass)%>%
summarise(percenr_died = sum(Survived == "Yes")/nrow(titanic10))
# Should print out:
#> # A tibble: 6 x 3
#> # Groups:   Sex [2]
#>   Sex    Pclass percent_died
#>   <chr>   <dbl>        <dbl>
#> 1 female      1       0.0319
#> 2 female      2       0.0789
#> 3 female      3       0.5
#> 4 male        1       0.631
#> 5 male        2       0.843
#> 6 male        3       0.865
titanic
titanic10
titanic10
nrow(titanic10)
n()
n(titanic)
nrow(titanic)
# Write your code here
library(dplyr)
titanic10 <- filter(titanic, !is.na(titanic$Age))
titanic10%>%
mutate(age_group = classify(titanic10$Age)) %>%
group_by(Pclass, age_group) %>%
summarise(count = n(),percent_died = sum(Survived == "No")/n())
# Should print out:
#> # A tibble: 9 x 4
#> # Groups:   Pclass [3]
#>   Pclass age_group percent_died count
#>    <dbl> <chr>            <dbl> <int>
#> 1      1 middle           0.311   164
#> 2      1 old              0.706    17
#> 3      1 young            0.2       5
#> 4      2 middle           0.580   150
#> 5      2 old              0.75      4
#> 6      2 young            0        19
#> 7      3 middle           0.791   296
#> 8      3 old              0.8       5
#> 9      3 young            0.593    54
geom_smooth(aes(x = carat, y = price))
ggplot(diamonds) +
geom_point(aes(x = carat, y = price)) +
geom_smooth(aes(x = carat, y = price))
library(ggplot2)
ggplot(diamonds) +
geom_point(aes(x = carat, y = price)) +
geom_smooth(aes(x = carat, y = price))
ggplot(diam) +
geom_point(aes(x = carat, y = price)) +
geom_smooth(aes(x = carat, y = price))
library(ggplot2)
ggplot(diam) +
geom_point(aes(x = carat, y = price)) +
geom_smooth(aes(x = carat, y = price))
diam <- diamonds %>% sample_n(1500)
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_point(aes(x = carat, y = price)) +
geom_smooth(aes(x = carat, y = price))
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_point(aes(x = carat, y = price)) +
geom_smooth(aes(x = carat, y = price))
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_point(aes(x = carat, y = price, color = clarity))
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_point(aes(x = carat, y = price, size = clarity))
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_point(aes(x = carat, y = price, shape = clarity))
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_point(aes(x = carat, y = price, alpha = clarity))
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_point(aes(x = carat, y = price, alpha = clarity))
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_point(aes(x = carat, y = price, color = clarity))
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
sum_data <- diam %>%
group_by(cut) %>%
summarise(count = n())
ggplot(data = sum_data) +
geom_bar(mapping = aes(x = cut, y = count),
stat = "identity")
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_bar(aes(x = cut), stat = "count")
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
sum_data <- diam %>%
group_by(cut) %>%
summarise(count = n())
ggplot(data = sum_data) +
geom_bar(mapping = aes(x = cut, y = count),
stat = "identity")
library(ggplot2)
library(dplyr)
diam <- diamonds %>% sample_n(1500)
ggplot(diam) +
geom_bar(aes(x = cut), stat = "count")
knitr::opts_chunk$set(echo = TRUE)
install.packages("stringr")
install.packages("DataExplorer")
library(readr)
# Download the data set
d <- read_csv('https://raw.githubusercontent.com/lgellis/STEM/master/DATA-ART-1/Data/FinalData.csv', col_names = TRUE)
d
?dim
library(dplyr)
glimpse(d)
summary(d)
library(DataExplorer)
library(ggplot2)
create_report(d)
# 自動儲存並開啟瀏覽器分頁顯示產生的報告文件
library(DataExplorer)
library(ggplot2)
create_report(d)
# 自動儲存並開啟瀏覽器分頁顯示產生的報告文件
#library(devtools)
#devtools::install_github("ropensci/visdat")
library(visdat)
install.packages(jiebaR)
install.packages("jiebaR")
install.packages("tidytext")
install.packages("quanteda")
setwd("~/GitHub/hw10-aRthur08701244")
docs_df1 <- readRDS("samesex_marriage.rds")
knitr::opts_chunk$set(echo = TRUE, comment = '#>', error=TRUE, results = 'hold', out.width='70%', fig.align = 'center', message = FALSE)
# Your code goes here
library(tidytext)
library(dplyr)
tidy_text_format <- docs_df1 %>%
unnest_tokens(output = "word", input = "content",
token = "regex", pattern = " ")
tidy_text_format %>%
group_by(topic, word) %>%
summarise(n = n())%>%
ungroup() %>%
group_by(topic) %>%
summarise(TTR = n() / sum(n))
# Should print out:
# tidytext:
#
#> # A tibble: 2 x 2
#>   topic   TTR
#>   <chr> <dbl>
#> 1 anti  0.115
#> 2 pro   0.173
#
# or...
# quanteda:
#
#>   document       TTR
#> 1     anti 0.1142181
#> 2      pro 0.1740035
# Your code goes here
library(tidytext)
library(dplyr)
docs_df1 <- readRDS("samesex_marriage.rds")
tidy_text_format <- docs_df1 %>%
unnest_tokens(output = "word", input = "content",
token = "regex", pattern = " ")
tidy_text_format %>%
group_by(topic, word) %>%
summarise(n = n())%>%
ungroup() %>%
group_by(topic) %>%
summarise(TTR = n() / sum(n))
# Should print out:
# tidytext:
#
#> # A tibble: 2 x 2
#>   topic   TTR
#>   <chr> <dbl>
#> 1 anti  0.115
#> 2 pro   0.173
#
# or...
# quanteda:
#
#>   document       TTR
#> 1     anti 0.1142181
#> 2      pro 0.1740035
